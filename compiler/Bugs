Incomplete list of bugs/limitations

See XXX in code

Type casting in code - currrently looks like
    n = (nil :: list('_type_param'(1)))
ugly A F.  Need to use version of
read that captures (type) var names and effectively have scope
being declaration of function plus function definition. A bit
messy but not too bad.

Various things to fix in sharing analysis - see paper for
"final" version of algorithm

Functions with multiple args, some of which are void cause C
code with void args (error).  eg
ints1 :: bst -> list(int) -> void -> ints
    sharing ints1(a_bst,a_ints,v) = ns
    pre nosharing
    post ns=a_ints.
ints1(a_bst, a_ints, v) = {
    is = cons(4, cons(2, cons(1, cons(3, nil))));
    return(is)
}.
This is a bit of a pain to fix with higher order etc?

Maximum number of args in closure - should use polymorphic
list of args if there are too many.

see example/bst_poly.pns
p ../examples/
~/bin/pnsc bst_poly.pns
vim bst_poly.pns

examples/rectype.pns
% f1(a) = r2c1(r2c2(a)).   % XXX should get redefinition error

pawns.pl:
% XXXX Possible BUG if we have a function as an argument and it has two
% closure arguments that share...
